// Emoji listesi
const emojiListesi = {
        "Domates": "üçÖ",
        "Biber": "üå∂",
        "Sarƒ±msak": "üßÑ",
        "Soƒüan": "üßÖ",
        "Havu√ß": "ü•ï",
        "Patates": "ü•î",
        "Patlƒ±can": "üçÜ",
        "Kabak": "ü•í",
        "Fasulye": "ü´ò",
        "Mƒ±sƒ±r": "üåΩ",
        "Lahana": "ü•¨",
        "Ispanak": "üçÉ",
        "Ku≈ükonmaz": "üå±",
        "Br√ºksel Lahanasƒ±": "ü•¶",
        "Pƒ±rasa": "ü•¨",
        "Karnabahar": "ü•¶",
        "Brokoli": "ü•¶",
        "Zeytinyaƒüƒ±": "ü´í",
        "S√ºt": "ü•õ",
        "Yumurta": "ü•ö",
        "Un": "üåæ",
        "≈ûeker": "üç¨",
        "Tuz": "üßÇ",
        "Karabiber": "üßÇ",
        "Kimyon": "üåø",
        "Zerde√ßal": "üåï",
        "Ki≈üni≈ü": "üåø",
        "Pul Biber": "üå∂",
        "Paprika": "üå∂",
        "Tar√ßƒ±n": "üü§",
        "Yenibahar": "üü§",
        "Vanilya √ñz√ºt√º": "üåº",
        "Defne Yapraƒüƒ±": "üçÉ",
        "Kekik": "üåø",
        "Rosemary": "üåø",
        "Ada√ßayƒ±": "üåø",
        "Kakao": "üç´",
        "Fesleƒüen": "üåø",
        "√áikolata": "üç´",
        "Beyaz Peynir": "üßÄ",
        "Mozzarella": "üßÄ",
        "Cheddar": "üßÄ",
        "S√ºzme Yoƒüurt": "ü•£",
        "Ricotta": "üßÄ",
        "Fƒ±stƒ±k Ezmesi": "ü•ú",
        "Bal": "üçØ",
        "Beyaz Ekmek": "üçû",
        "√áavdar Ekmeƒüi": "üçû",
        "Baget": "ü•ñ",
        "Tortilla": "üåÆ",
        "Pizza Hamuru": "üçï",
        "Pide": "ü•ô",
        "Simit": "ü•Ø",
        "Kruvasan": "ü•ê",
        "Poƒüa√ßa": "ü•ê",
        "Kek": "üç∞",
        "√á√∂rek": "üçû",
        "Pasta": "üç∞",
        "Kurabiye": "üç™",
        "Bisk√ºvi": "üç™",
        "Dondurma": "üç¶",
        "√á√∂rek": "üç©",
        "Donut": "üç©",
        "Meyve": "üçé",
        "Elma": "üçé",
        "Armut": "üçê",
        "Portakal": "üçä",
        "Muz": "üçå",
        "√úz√ºm": "üçá",
        "Karpuz": "üçâ",
        "Kavun": "üçà",
        "Kiraz": "üçí",
        "Ananas": "üçç",
        "≈ûeftali": "üçë",
        "Limon": "üçã",
        "Nar": "üçä",
        "Erik": "üçë",
        "Kayƒ±sƒ±": "üçë",
        "Yaban Mersini": "ü´ê",
        "Ceviz": "üå∞",
        "Fƒ±ndƒ±k": "üå∞",
        "Badem": "üå∞",
        "Fƒ±stƒ±k": "ü•ú",
        "Ceviz": "üå∞",
        "Kaju": "ü•ú",
        "Kurutulmu≈ü Meyve": "üçí",
        "Yaban Mersini": "ü´ê",
        "Karpuz Tohumu": "üå±",
        "Limon Suyu": "üçã",
        "Portakal Suyu": "üçä",
        "Elma Suyu": "üçè",
        "Yaban Mersini Suyu": "ü´ê",
        "Vi≈üne Suyu": "üçí",
        "≈ûarap": "üç∑",
        "Bira": "üç∫",
        "Soda": "ü•§",
        "Limonata": "üçã",
        "Su": "üíß",
        "Meyve Suyu": "üçä",
        "Zeytin": "ü´í",
        "Zeytin Yaƒüƒ±": "ü´í",
        "Hindistancevizi S√ºt√º": "ü••",
        "Brokoli √ái√ßeƒüi": "ü•¶",
        "Ay√ßi√ßek Yaƒüƒ±": "üåª",
        "Margarine": "üßà",
        "Terbiyeli Yoƒüurt": "ü•£",
        "Fƒ±rƒ±n Tavuk": "üçó",
        "Tavuk G√∂ƒüs√º": "üçó",
        "Izgara Et": "ü•©",
        "K√∂fte": "üçñ",
        "Dana Eti": "ü•©",
        "Kuzu Eti": "ü•©",
        "Balƒ±k": "üêü",
        "Somon": "üêü",
        "Ton Balƒ±ƒüƒ±": "üêü",
        "Midye": "ü¶™",
        "Karides": "ü¶ê",
        "Yenge√ß": "ü¶Ä",
        "ƒ∞stiridye": "ü¶™",
        "Fƒ±stƒ±k Ezmesi": "ü•ú",
        "Kekik Yaƒüƒ±": "üåø",
        "Vegan Burger": "üçî",
        "Vejetaryen Pizza": "üçï",
        "Kavurma": "ü•©",
        "S√ºtl√º Kahve": "‚òï",
        "T√ºrk Kahvesi": "‚òï",
        "Sƒ±cak √áikolata": "‚òï",
        "Kumpir": "üç†",
        "Sosis": "üå≠",
        "Tereyaƒüƒ±": "üßà",
        "Yulaf": "üåæ",
        "Beyaz ≈ûarap": "üç∑",
        "≈ûampanya": "üçæ",
        "Vi≈üne": "üçí",
        "Avokado": "ü•ë",
        "Karpuz": "üçâ",
        "Mango": "ü•≠",
        "ƒ∞ncir": "üçà",
        "Zencefil": "üßÑ",
        "Lavanta": "üíú",
        "√áam Fƒ±stƒ±ƒüƒ±":¬†"üå∞"
};

let secilenKategori = "T√ºm√º"; // Varsayƒ±lan

document.querySelectorAll('.kategori-btn').forEach(btn => {
  btn.addEventListener('click', function() {
    document.querySelectorAll('.kategori-btn').forEach(b => b.classList.remove('active'));
    this.classList.add('active');
    secilenKategori = this.dataset.kategori;
  });
});


// Malzeme butonlarƒ±na tƒ±klayƒ±nca se√ßilen malzemeyi ekler
document.querySelectorAll('.malzeme-listesi button').forEach(button => {
    button.addEventListener('click', function() {
        const malzemeAdi = this.innerText;
        malzemeEkle(malzemeAdi);
    });
});

// "Ekle" butonuna basƒ±nca inputtan malzeme ekler
document.querySelector('.ekle-btn').addEventListener('click', function() {
    const input = document.querySelector('.malzeme-ekle input');
    const yeniMalzeme = input.value.trim();

    if (yeniMalzeme !== '') {
        // Girdiƒüi malzemenin ba≈ü harfini b√ºy√ºk yapƒ±yoruz, diƒüerlerini k√º√ß√ºk yapƒ±yoruz
        const formatlanmisMalzeme = capitalizeFirstLetter(yeniMalzeme);

        // Emojiyi bul (varsa)
        const emoji = emojiListesi[formatlanmisMalzeme] || "üìù"; // Emoji yoksa varsayƒ±lan emoji ekle
        malzemeEkle(formatlanmisMalzeme, emoji);
        input.value = ''; // Input'u temizle
    }
});

// Ba≈ü harfi b√ºy√ºk, geri kalan harfleri k√º√ß√ºk yapma fonksiyonu
function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
}

// Malzeme ekleyen fonksiyon
function malzemeEkle(malzemeAdi, emoji = "") {
    const secilenListesi = document.getElementById('secilen-malzemeler');

    // Aynƒ± malzeme iki kere eklenmesin
    const mevcutMalzeme = Array.from(secilenListesi.children).find(span => 
        span.querySelector('span') && span.querySelector('span').innerText.includes(malzemeAdi)
    );

    if (!mevcutMalzeme) {
        const secilen = document.createElement('div');
        secilen.classList.add('secilen');

        // Emojiyi malzeme adƒ±nƒ±n ba≈üƒ±na ekliyoruz
        secilen.innerHTML = `
            <span>${emoji} ${malzemeAdi}</span>
            <button class="kapat">&times;</button>
        `;

        secilen.querySelector('.kapat').addEventListener('click', function() {
            secilen.remove();
        });

        secilenListesi.appendChild(secilen);
    }
}



document.addEventListener("DOMContentLoaded", function () {
    const buton = document.getElementById("tarif-bul-btn");
    const tarifListesi = document.getElementById("tarif-listesi");
    const tariflerBolumu = document.getElementById("tarifler");
  
    buton.addEventListener("click", function () {
      const secilenler = document.querySelectorAll('#secilen-malzemeler .secilen span');
      const malzemeler = Array.from(secilenler).map(m =>
        m.innerText.replace(/^[^a-zA-Z√ßƒüƒ±√∂≈ü√º√áƒûƒ∞√ñ≈û√ú]*\s*/, '').trim()
      );
  
      fetch(`/api/tarifler?malzemeler=${malzemeler.join(',')}&kategori=${secilenKategori}`)

        .then(r => r.json())
        .then(tarifler => {
          const unique = new Map(); // üî• Tarifleri ID'ye g√∂re sakla
          tarifler.forEach(t => {
              const key = t.isim.toLowerCase().trim();
              if (!unique.has(key)) {
                unique.set(key, t);
      }
          });
  
          tarifListesi.innerHTML = '';
          unique.forEach(tarif => {
            const card = document.createElement('div');
            card.classList.add('tarif-card');
            
            card.innerHTML = `
             <div class="card-top">
                 <img src="${tarif.resim && tarif.resim.length > 5 ? tarif.resim : '/static/placeholder.png'}" alt="${tarif.isim}" class="dinamik-gorsel">



                  <div class="plus">+</div>
                  <div class="time-badge">${tarif.hazirlama_suresi || '30 dk'}</div>
                  <div class="favorite-btn">‚ô°</div>
              </div>
              <div class="card-content">
                 <div class="card-header-alt">
                  <span class="difficulty">${tarif.kategori || 'Genel'}</span>
                  <div class="favorite-btn">‚ô°</div>
                </div>

                  <h3>${tarif.isim}</h3>
                  <p>${tarif.malzemeler ? tarif.malzemeler.split(',').length : 0} malzeme</p>
                  <div class="card-footer">
                      <span>${tarif.bolge || 'Bilinmiyor'}</span>
                      <a href="/tarif/${tarif.id || 1}">Tarifi G√∂r ‚Üí</a>
                  </div>
              </div>
              <div class="rating">‚≠ê 4.8</div>
            `;
            const favBtn = card.querySelector('.favorite-btn');
            favBtn.addEventListener('click', function () {
                  favBtn.classList.toggle('active');
                  favBtn.innerText = favBtn.classList.contains('active') ? '‚ù§Ô∏è' : '‚ô°';
});

            tarifListesi.appendChild(card);
          });
  
          tariflerBolumu.style.display = 'block';
        })
        .catch(error => {
                console.error("Tarifleri alƒ±rken hata:", error);
            });
    });
  });
  